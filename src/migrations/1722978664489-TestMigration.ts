import { MigrationInterface, QueryRunner } from "typeorm";

export class TestMigration1722978664489 implements MigrationInterface {
    name = 'TestMigration1722978664489'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE \`Services\` (\`service_id\` int NOT NULL AUTO_INCREMENT, \`service_name\` varchar(30) CHARACTER SET "utf8mb4" COLLATE "utf8mb4_bin" NOT NULL, \`shorthand\` varchar(20) CHARACTER SET "utf8mb4" COLLATE "utf8mb4_bin" NOT NULL, \`time\` int(3) UNSIGNED NOT NULL, \`money\` decimal(5,2) UNSIGNED NOT NULL, \`body\` decimal(2,1) UNSIGNED NOT NULL DEFAULT '0.0', \`feet\` decimal(2,1) UNSIGNED NOT NULL DEFAULT '0.0', \`acupuncture\` decimal(2,1) UNSIGNED NOT NULL DEFAULT '0.0', \`beds_required\` int(2) UNSIGNED NOT NULL DEFAULT '0', \`can_overlap\` tinyint NOT NULL DEFAULT 0, \`color\` enum ('RED', 'BLUE', 'YELLOW', 'GREEN', 'ORANGE', 'PURPLE', 'GRAY', 'BLACK') NOT NULL, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, PRIMARY KEY (\`service_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`Customers\` (\`customer_id\` int NOT NULL AUTO_INCREMENT, \`phone_number\` varchar(10) NULL, \`vip_serial\` varchar(6) NULL, \`customer_name\` varchar(60) CHARACTER SET "utf8mb4" COLLATE "utf8mb4_bin" NULL, \`notes\` text CHARACTER SET "utf8mb4" COLLATE "utf8mb4_bin" NULL, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, PRIMARY KEY (\`customer_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`Reservations\` (\`reservation_id\` int NOT NULL AUTO_INCREMENT, \`reserved_date\` datetime NOT NULL, \`date\` date NOT NULL, \`employee_id\` int NOT NULL, \`requested_gender\` enum ('MALE', 'FEMALE') NULL, \`requested_employee\` tinyint NOT NULL DEFAULT 0, \`cash\` decimal(5,2) UNSIGNED NULL, \`machine\` decimal(5,2) UNSIGNED NULL, \`vip\` decimal(5,2) UNSIGNED NULL, \`gift_card\` decimal(5,2) UNSIGNED NULL, \`insurance\` decimal(5,2) UNSIGNED NULL, \`tips\` decimal(6,2) UNSIGNED NULL, \`tip_method\` enum ('CASH', 'MACHINE', 'HALF') NULL, \`message\` text CHARACTER SET "utf8mb4" COLLATE "utf8mb4_bin" NULL, \`created_by\` varchar(200) NOT NULL, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_by\` varchar(200) NOT NULL, \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`service_id\` int NULL, \`customer_id\` int NULL, PRIMARY KEY (\`reservation_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`VipPackagesSold\` (\`serial\` varchar(6) NOT NULL, \`sold_amount\` decimal(8,2) UNSIGNED NOT NULL, \`commission_amount\` decimal(8,2) UNSIGNED NOT NULL, \`employee_ids\` text NOT NULL, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), PRIMARY KEY (\`serial\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`Schedules\` (\`date\` date NOT NULL, \`employee_id\` int NOT NULL, \`working\` tinyint NOT NULL DEFAULT 0, \`on_call\` tinyint NOT NULL DEFAULT 0, \`start\` time NULL, \`end\` time NULL, \`priority\` int(2) UNSIGNED NULL, \`signed\` tinyint NOT NULL DEFAULT 0, PRIMARY KEY (\`date\`, \`employee_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`Employees\` (\`employee_id\` int NOT NULL AUTO_INCREMENT, \`username\` varchar(30) NOT NULL, \`password\` varchar(60) NOT NULL, \`first_name\` varchar(30) NOT NULL, \`last_name\` varchar(30) NOT NULL, \`gender\` enum ('MALE', 'FEMALE') NOT NULL, \`role\` enum ('SOFTWARE DEVELOPER', 'MANAGER', 'RECEPTIONIST', 'STORE EMPLOYEE', 'OTHER') NOT NULL, \`permissions\` set ('GET CUSTOMER PERMISSION', 'UPDATE CUSTOMER PERMISSION', 'ADD CUSTOMER PERMISSION', 'DELETE CUSTOMER PERMISSION', 'GET EMPLOYEE PERMISSION', 'UPDATE EMPLOYEE PERMISSION', 'ADD EMPLOYEE PERMISSION', 'DELETE EMPLOYEE PERMISSION', 'GET GIFT CARD PERMISSION', 'UPDATE GIFT CARD PERMISSION', 'ADD GIFT CARD PERMISSION', 'DELETE GIFT CARD PERMISSION', 'GET SCHEDULE PERMISSION', 'UPDATE SCHEDULE PERMISSION', 'ADD SCHEDULE PERMISSION', 'DELETE SCHEDULE PERMISSION', 'GET SERVICE PERMISSION', 'UPDATE SERVICE PERMISSION', 'ADD SERVICE PERMISSION', 'DELETE SERVICE PERMISSION', 'GET RESERVATION PERMISSION', 'UPDATE RESERVATION PERMISSION', 'ADD RESERVATION PERMISSION', 'DELETE RESERVATION PERMISSION', 'GET VIP PACKAGE PERMISSION', 'UPDATE VIP PACKAGE PERMISSION', 'ADD VIP PACKAGE PERMISSION', 'DELETE VIP PACKAGE PERMISSION') NOT NULL, \`body_rate\` decimal(4,2) UNSIGNED NULL, \`feet_rate\` decimal(4,2) UNSIGNED NULL, \`acupuncture_rate\` decimal(4,2) UNSIGNED NULL, \`per_hour\` decimal(4,2) UNSIGNED NULL, \`language\` enum ('ENGLISH', 'SIMPLIFIED CHINESE', 'TRADITIONAL CHINESE') NOT NULL DEFAULT 'ENGLISH', \`dark_mode\` tinyint NOT NULL DEFAULT 0, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, PRIMARY KEY (\`employee_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`GiftCardsSold\` (\`gift_card_id\` varchar(8) NOT NULL, \`date\` date NOT NULL, \`payment_method\` enum ('CASH', 'MACHINE') NOT NULL, \`payment_amount\` decimal(6,2) UNSIGNED NOT NULL, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), PRIMARY KEY (\`gift_card_id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`schedules_vip_packages_vip_packages_sold\` (\`date\` date NOT NULL, \`employee_id\` int NOT NULL, \`serial\` varchar(6) NOT NULL, INDEX \`IDX_6af030a28b4787178a6a317229\` (\`date\`, \`employee_id\`), INDEX \`IDX_a280bd5bfb79c663644b3cde55\` (\`serial\`), PRIMARY KEY (\`date\`, \`employee_id\`, \`serial\`)) ENGINE=InnoDB`);
        await queryRunner.query(`ALTER TABLE \`Reservations\` ADD CONSTRAINT \`FK_c329cbd7359edd8b43def969504\` FOREIGN KEY (\`date\`, \`employee_id\`) REFERENCES \`Schedules\`(\`date\`,\`employee_id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`Reservations\` ADD CONSTRAINT \`FK_d177729f8e3d6b11fd997390713\` FOREIGN KEY (\`service_id\`) REFERENCES \`Services\`(\`service_id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`Reservations\` ADD CONSTRAINT \`FK_6e6ddd54b4641e309135ef3111b\` FOREIGN KEY (\`customer_id\`) REFERENCES \`Customers\`(\`customer_id\`) ON DELETE SET NULL ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`Schedules\` ADD CONSTRAINT \`FK_85879832f439c5db871fbb05e8d\` FOREIGN KEY (\`employee_id\`) REFERENCES \`Employees\`(\`employee_id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`schedules_vip_packages_vip_packages_sold\` ADD CONSTRAINT \`FK_6af030a28b4787178a6a317229e\` FOREIGN KEY (\`date\`, \`employee_id\`) REFERENCES \`Schedules\`(\`date\`,\`employee_id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`schedules_vip_packages_vip_packages_sold\` ADD CONSTRAINT \`FK_a280bd5bfb79c663644b3cde55e\` FOREIGN KEY (\`serial\`) REFERENCES \`VipPackagesSold\`(\`serial\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`schedules_vip_packages_vip_packages_sold\` DROP FOREIGN KEY \`FK_a280bd5bfb79c663644b3cde55e\``);
        await queryRunner.query(`ALTER TABLE \`schedules_vip_packages_vip_packages_sold\` DROP FOREIGN KEY \`FK_6af030a28b4787178a6a317229e\``);
        await queryRunner.query(`ALTER TABLE \`Schedules\` DROP FOREIGN KEY \`FK_85879832f439c5db871fbb05e8d\``);
        await queryRunner.query(`ALTER TABLE \`Reservations\` DROP FOREIGN KEY \`FK_6e6ddd54b4641e309135ef3111b\``);
        await queryRunner.query(`ALTER TABLE \`Reservations\` DROP FOREIGN KEY \`FK_d177729f8e3d6b11fd997390713\``);
        await queryRunner.query(`ALTER TABLE \`Reservations\` DROP FOREIGN KEY \`FK_c329cbd7359edd8b43def969504\``);
        await queryRunner.query(`DROP INDEX \`IDX_a280bd5bfb79c663644b3cde55\` ON \`schedules_vip_packages_vip_packages_sold\``);
        await queryRunner.query(`DROP INDEX \`IDX_6af030a28b4787178a6a317229\` ON \`schedules_vip_packages_vip_packages_sold\``);
        await queryRunner.query(`DROP TABLE \`schedules_vip_packages_vip_packages_sold\``);
        await queryRunner.query(`DROP TABLE \`GiftCardsSold\``);
        await queryRunner.query(`DROP TABLE \`Employees\``);
        await queryRunner.query(`DROP TABLE \`Schedules\``);
        await queryRunner.query(`DROP TABLE \`VipPackagesSold\``);
        await queryRunner.query(`DROP TABLE \`Reservations\``);
        await queryRunner.query(`DROP TABLE \`Customers\``);
        await queryRunner.query(`DROP TABLE \`Services\``);
    }

}
